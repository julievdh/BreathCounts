phase <- c(rep(1,271*53),rep(1,616*6),rep(0,242*53),rep(0,504*6),
rep(-1,64*53),rep(-1,116*6),rep(2,201*52),rep(2,441*5),
rep(1,233*101),rep(1,387*11),rep(0,198*101),rep(0,267*11),
rep(-1,57*101),rep(-1,158*11),rep(2,88*100),rep(2,308*10))
# set up factors
Ind <- as.factor(ind)
Condition <- as.factor(cond)
Phase <- as.factor(phase)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
dur.aov
TukeyHSD(aov(dur.linear.model))
df = data.frame(Ind, Condition, Phase, dur)     # create data frame
subdf = na.omit(df)                             # remove NAs
# plot main effect of condition
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
tukdur <- TukeyHSD(aov(dur.linear.model))
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSdur.mat")
setwd("~/Documents/R")
# concatenate
dur <- c(dat$dur.highasc.3911,dat$dur.highasc.4057,dat$dur.highbot.3911,dat$dur.highbot.4057,
dat$dur.highdesc.3911,dat$dur.highdesc.4057,dat$dur.highsurf.3911,dat$dur.highsurf.4057,
dat$dur.lowasc.3911,dat$dur.lowasc.4057,dat$dur.lowbot.3911,dat$dur.lowbot.4057,
dat$dur.lowdesc.3911,dat$dur.lowdesc.4057,dat$dur.lowsurf.3911,dat$dur.lowsurf.4057)
ind <- c(rep(3911,271*53),rep(4057,616*6),rep(3911,242*53),rep(4057,504*6),
rep(3911,64*53),rep(4057,116*6),rep(3911,201*52),rep(4057,441*5),
rep(3911,233*101),rep(4057,387*11),rep(3911,198*101),rep(4057,267*11),
rep(3911,57*101),rep(4057,158*11),rep(3911,88*100),rep(4057,308*10))
cond <- c(rep(1,271*53),rep(1,616*6),rep(1,242*53),rep(1,504*6),
rep(1,64*53),rep(1,116*6),rep(1,201*52),rep(1,441*5),
rep(0,233*101),rep(0,387*11),rep(0,198*101),rep(0,267*11),
rep(0,57*101),rep(0,158*11),rep(0,88*100),rep(0,308*10))
phase <- c(rep(1,271*53),rep(1,616*6),rep(0,242*53),rep(0,504*6),
rep(-1,64*53),rep(-1,116*6),rep(2,201*52),rep(2,441*5),
rep(1,233*101),rep(1,387*11),rep(0,198*101),rep(0,267*11),
rep(-1,57*101),rep(-1,158*11),rep(2,88*100),rep(2,308*10))
# set up factors
Ind <- as.factor(ind)
Condition <- as.factor(cond)
Phase <- as.factor(phase)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
tukdur <- TukeyHSD(aov(dur.linear.model))
## load duration data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSdur.mat")
setwd("~/Documents/R")
# concatenate
dur <- c(dat$dur.highasc.3911,dat$dur.highasc.4057,dat$dur.highbot.3911,dat$dur.highbot.4057,
dat$dur.highdesc.3911,dat$dur.highdesc.4057,dat$dur.highsurf.3911,dat$dur.highsurf.4057,
dat$dur.lowasc.3911,dat$dur.lowasc.4057,dat$dur.lowbot.3911,dat$dur.lowbot.4057,
dat$dur.lowdesc.3911,dat$dur.lowdesc.4057,dat$dur.lowsurf.3911,dat$dur.lowsurf.4057)
ind <- c(rep(3911,271*53),rep(4057,616*6),rep(3911,242*53),rep(4057,504*6),
rep(3911,64*53),rep(4057,116*6),rep(3911,201*52),rep(4057,441*5),
rep(3911,233*101),rep(4057,387*11),rep(3911,198*101),rep(4057,267*11),
rep(3911,57*101),rep(4057,158*11),rep(3911,88*100),rep(4057,308*10))
cond <- c(rep(1,271*53),rep(1,616*6),rep(1,242*53),rep(1,504*6),
rep(1,64*53),rep(1,116*6),rep(1,201*52),rep(1,441*5),
rep(0,233*101),rep(0,387*11),rep(0,198*101),rep(0,267*11),
rep(0,57*101),rep(0,158*11),rep(0,88*100),rep(0,308*10))
phase <- c(rep(1,271*53),rep(1,616*6),rep(0,242*53),rep(0,504*6),
rep(-1,64*53),rep(-1,116*6),rep(2,201*52),rep(2,441*5),
rep(1,233*101),rep(1,387*11),rep(0,198*101),rep(0,267*11),
rep(-1,57*101),rep(-1,158*11),rep(2,88*100),rep(2,308*10))
# set up factors
Ind <- as.factor(ind)
Condition <- as.factor(cond)
Phase <- as.factor(phase)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
dim(Ind)
size(Ind)
dim(ind)
dim(dur)
source('~/.active-rstudio-document', echo=TRUE)
dur.aov
tukdur
library(multcomp)
install.packages(multcomp)
install.packages("multcomp")
tuk <- glht(dur.aov, linfct = mcp(tx = "Tukey"))
summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
par(opar)
library(multcomp)
tuk <- glht(dur.aov, linfct = mcp(tx = "Tukey"))
summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
par(opar)
tuk <- glht(aov(dur.linear.model), linfct = mcp(tx = "Tukey"))
summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
par(opar)
tuk <- glht(aov(dur.linear.model))
summary(tuk)
tuk.cld <- cld(tuk)
opar <- par(mai=c(1,1,1.5,1))
> plot(tuk.cld)
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
tuk.cld
cld(tuk)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
tuk <- glht(aov(dur.linear.model))
tuk
summary(tuk)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase,data = subdf)
dur.aov <- anova(dur.linear.model, data = subdf)
dur.aov <- anova(dur.linear.model)
tuk <- glht(aov(dur.linear.model))
summary(tuk)
HSD.test(aov(dur.linear.model),"tx",group = TRUE)
test<-HSD.test(aov(dur.linear.model),"tx",group = TRUE)
test
summary(test)
test<-HSD.test(aov(dur.linear.model),"tx")
test
help tukeyHSD
plot(TukeyHSD(aov(dur.linear.model)))
source('~/.active-rstudio-document', echo=TRUE)
dur.aov <- anova(dur.linear.model)
tukdur <-TukeyHSD(aov(dur.linear.model))
tukdur
citation()
source('~/Documents/R/TOWR/FSRstats.R', echo=TRUE)
mean(dat$dur.highasc.3911)
nanmean(dat$dur.highasc.3911)
mean(dat$dur.highasc.3911,NA.RM = TRUE)
mean(dur)
dat$dur.highasc.3911 <- gsub("NaN", "NA", dat$dur.highasc.3911)
mean(dat$dur.highasc.3911)
mean(dat$dur.highasc.3911,NA.RM = TRUE)
mean(dat$dur.highasc.3911,NA.RM = FALSE)
source('~/Documents/R/TOWR/FSRstats.R', echo=TRUE)
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat") ## Data updated and resaved Feb 17 2016
setwd("~/Documents/R")
source('~/Documents/R/TOWR/PropulsiveEfficiencyStats.R', echo=TRUE)
mean(dat$alleta[which(Condition == 0)])
mean(dat$alleta[which(Condition == 1)])
mean(dat$alleta[which(Condition == 1)],NA.RM = TRUE)
mean(dat$alleta[which(Condition == 1)],NA.RM = "TRUE")
mean(dat$alleta[which(Condition == 1)],na.rm = "TRUE")
max(dat$alleta[which(Condition == 0)])
max(dat$alleta[which(Condition == 1)],na.rm = "TRUE")
source('~/Documents/R/TOWR/FSRstats.R', echo=TRUE)
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars_v6.mat") ## Data updated and resaved Feb 17 2016
setwd("~/Documents/R")
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars_v6.mat") ## Data updated and resaved Feb 17 2016
setwd("~/Documents/R")
source('~/.active-rstudio-document', echo=TRUE)
hz.aov
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("allCT.mat") # Data from Feb 15 2016
setwd("~/Documents/R")
Condition <- as.factor(dat$condition)
Phase <- as.factor(dat$portion)
CT.linear.model <- lm(dat$allCT ~ Condition + Phase)
anova(CT.linear.model)
mean(CT~Condition + Phase)
mean(CT~Condition + Phase)
mean(allCT~Condition + Phase)
mean(allCT~Condition + Phase,NA = omit)
mean(allCT~Condition + Phase,NA omit)
mean(allCT~Condition + Phase,'NA' omit)
CT.linear.model
plot(CT.linear.model)
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("allCT.mat") # Data from Feb 15 2016
setwd("~/Documents/R")
st.linear.model <- lm(dat$allst ~ Condition + Phase)
source('~/Documents/R/TOWR/PropulsiveEfficiencyStats.R', echo=TRUE)
st.linear.model <- lm(dat$allst ~ Condition + Phase)
st.linear.model
plot(dat$allst ~ Condition + Phase)
plot(dat$allst ~ Condition*Phase)
mean(dat$allst(Phase = 1))
mean(dat$allst[which(Phase == 1)])
source('~/Documents/R/TOWR/PropulsiveEfficiencyStats.R', echo=TRUE)
source('~/Documents/R/TOWR/PropulsiveEfficiencyStats.R', echo=TRUE)
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("allCT.mat") # Data from Feb 15 2016
setwd("~/Documents/MATLAB/Eg4057")
source('~/Documents/R/TOWR/PropulsiveEfficiencyStats.R', echo=TRUE)
CT.linear.model <- lm(dat$allCT ~ Condition + Phase)
anova(CT.linear.model)
ni.linear.model <- lm(dat$allni ~ Condition + Phase)
anova(ni.linear.model)
st.linear.model <- lm(dat$allst ~ Condition + Phase)
anova(st.linear.model)
mean(dat$allst[which(Phase == 1)])
mean(dat$allst[which(Phase == 1)],na.rm - "TRUE")
mean(dat$allst[which(Phase == 1)],NA.RM - "TRUE")
mean(dat$allst[which(Condition == 1)])
mean(dat$allst[which(Condition == 0)])
mean(dat$allst[which(Phase == 0)])
plot(dat$allst ~ Condition*Phase)
boxplot(dat$allst ~ Condition*Phase)
st.linear.model <- lm(dat$allst ~ Condition*Phase)
anova(st.linear.model)
eta.linear.model <- lm(dat$alleta ~ Condition + Phase)
anova(eta.linear.model)
boxplot(alleta~Condition*Phase)
boxplot(dat$alleta~Condition*Phase)
pt.linear.model <- lm(dat$all.pt ~ Condition + Phase)
anova(pt.linear.model)
boxplot(dat$all.pt~Condition*Phase)
mean(trialmn[Condition==1]
)
mean(trialmn[Condition==1])
source('~/Documents/R/DQ_R/SwimSpeed.R', echo=TRUE)
mean(trialmn[Condition==1])
(mean(trialmn[Condition==1])-mean(trialmn[Condition==0]))/mean(trialmn[Condition==0])
mean(trialmn[Condition==0])
source('~/Documents/R/DQ_R/SwimSpeed.R', echo=TRUE)
## Make All Trials
# Make non-boat trials only
trialmn <- trialmn
Ind <- Ind
Condition <- Condition
Ind <- as.factor(Ind)
Condition <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Ind + Condition)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
plot(trialmn ~ Ind*Condition)
library(R.matlab)
library(agricolae)
# trial mean lap times
trialmn <- c(22.4346153846154,    39.1156250000000,  32.2573684210526,
25.2772727272727,	28.7019047619048,	26.5613043478261,	27.2952380952381,
42.2686666666667,	25.0495833333333,	35.0311111111111,	27.6572727272727,
26.2870833333333,	26.1421739130435,	38.8281250000000,	25.7356521739130,
35.3317647058824,	30.9170000000000,	29.2157142857143,	22.9676923076923,
40.8013333333333,	35.6823529411765,	25.6600000000000,	25.3225000000000,
27.0918181818182,	26.5308333333333,	26.0750000000000,	27.9263636363636,
27.5481818181818,	38.9487500000000,	35.3250000000000,	28.0836363636364)
# individual and tag condition are factors
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
# O = no tag; 1 = tag; 5 = tag + 4; 10 = boat, no tag; 11 = boat, tag; 13 = boat, tag + 2
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
# Make non-boat trials only
trialmean <- trialmn[Condition < 10]
Ind <- as.factor(Ind[Condition < 10])
Condition <- as.factor(Condition[Condition < 10])
# set up linear model
linear.model <- lm(trialmean ~ Ind + Condition)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
# plot
plot(trialmean ~ Ind*Condition)
(mean(trialmean[Condition==5])-mean(trialmean[Condition==0]))/mean(trialmean[Condition==0])
(mean(trialmean[Condition==5])-mean(trialmean[Condition==1]))/mean(trialmean[Condition==1])
## Make All Trials
# Make non-boat trials only
trialmn <- trialmn
Ind <- Ind
Condition <- Condition
Indv <- as.factor(Ind)
Cond <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Indv + Cond)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
# plot
plot(trialmn ~ Indv*Cond)
# trial mean lap times
trialmn <- c(22.4346153846154,    39.1156250000000,  32.2573684210526,
25.2772727272727,	28.7019047619048,	26.5613043478261,	27.2952380952381,
42.2686666666667,	25.0495833333333,	35.0311111111111,	27.6572727272727,
26.2870833333333,	26.1421739130435,	38.8281250000000,	25.7356521739130,
35.3317647058824,	30.9170000000000,	29.2157142857143,	22.9676923076923,
40.8013333333333,	35.6823529411765,	25.6600000000000,	25.3225000000000,
27.0918181818182,	26.5308333333333,	26.0750000000000,	27.9263636363636,
27.5481818181818,	38.9487500000000,	35.3250000000000,	28.0836363636364)
# individual and tag condition are factors
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
trialmean <- trialmn[Condition < 10]
Indv <- as.factor(Ind[Condition < 10])
Indv <- as.factor(Ind[Condition < 10])
Cond <- as.factor(Condition[Condition < 10])
linear.model <- lm(trialmean ~ Indv + Cond)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
plot(trialmean ~ Indv*Cond)
trialmn <- trialmn
Indv <- as.factor(Ind)
Cond <- as.factor(Condition)
Ind <- as.factor(Ind)
Cond <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Ind + Cond)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
plot(trialmn ~ Indv*Cond)
aov
trialmnB <- trialmn[Condition > 9]
IndB <- as.factor(Ind[Condition > 9])
CondB <- as.factor(Condition[Condition > 9])
linear.model <- lm(trialmnB ~ IndB + CondB)
aov <- anova(linear.model)
aov
source('~/.active-rstudio-document', echo=TRUE)
vel <- c(1,2,3,4,5,6)
CFD_Cd_notag <- c(0.0127,0.0106,0.0097,0.0094,0.0093,0.0092)
CFD_Cd_tag <- c(0.0132,0.0111,0.0102,0.0099,0.0098,0.0097)
CFD_Cd_tag2 <- c(0.0159,0.0144,0.0132,0.0129,0.0128,0.0127)
CFD_Cd_tag4 <- c(0.0186,0.0169,0.0162,0.0160,0.0157,0.0158)
allvel <- as.factor(rep(vel,4))
allvel
tag <- as.factor(rep(0,4),rep(1,4),rep(2,4),rep(4,4))
tag <- as.factor(c(0,0,0,0,1,1,1,1,2,2,2,2,4,4,4,4))
allCFD <- c(CFD_Cd_notag,CFD_Cd_tag,CFD_Cd_tag2,CFD_Cd_tag4)
vel <- c(1,2,3,4,5,6)
CFD_Cd_notag <- c(0.0127,0.0106,0.0097,0.0094,0.0093,0.0092)
CFD_Cd_tag <- c(0.0132,0.0111,0.0102,0.0099,0.0098,0.0097)
CFD_Cd_tag2 <- c(0.0159,0.0144,0.0132,0.0129,0.0128,0.0127)
CFD_Cd_tag4 <- c(0.0186,0.0169,0.0162,0.0160,0.0157,0.0158)
allvel <- as.factor(rep(vel,4))
tag <- as.factor(c(0,0,0,0,1,1,1,1,2,2,2,2,4,4,4,4))
allCFD <- c(CFD_Cd_notag,CFD_Cd_tag,CFD_Cd_tag2,CFD_Cd_tag4)
CFD.linear.model <- lm(allCFD ~ allvel*tag)
tag
tag <- as.factor(c(0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,4,4,4,4,4,4))
CFD.linear.model <- lm(allCFD ~ allvel*tag)
CFD.aov <- anova(CFD.linear.model)
tukdur <-TukeyHSD(aov(CFD.linear.model))
CFD.linear.model
CFD.linear.model <- lm(allCFD ~ allvel+tag)
CFD.linear.model
plot(allCFD ~ allvel+tag)
plot(allCFD ~ allvel*tag)
CFD.aov
tukdur
CFD.aov <- anova(CFD.linear.model)
tukdur <-TukeyHSD(aov(CFD.linear.model))
tukfur
tukdur
CFD.aov
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
(Vmax*rho)/(1000*pi*eta)
(Vmax*rho)/(pi*eta)
(Vmax*rho)/(1000*pi*eta)
(Vmax*rho/1000)/(1000*pi*eta)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
? nthroot
??nthroot
library(pracma)
install.packages("pracma")
library(pracma)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
fun2
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
60/1.5
60/15
15*4
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/PneumoDesignTest.R', echo=TRUE)
source('~/Documents/R/DQ_R/SwimSpeed.R', echo=TRUE)
source('~/Documents/R/DQ_R/SwimSpeed_Persp.R', echo=TRUE)
3.6582,	4.2392,	2.5079,
3.7376,	3.9828,	2.5324)
trialmn <- c(3.5128,  3.3899, 2.5079,
3.3292,	4.0356,	2.4800,
3.6582,	4.2392,	2.5079,
3.7376,	3.9828,	2.5324)
trialmn <- c(3.5128,  3.3899, 2.5079,
3.3292,	4.0356,	2.4800,
3.6582,	4.2392,	2.5079,
3.7376,	3.9828,	2.5324)
# individual and tag condition are factors
# Kolohe = 1, Liko = 2, Lono = 3, Nainoa = 4
Ind <- c(1,1,1,2,2,2,3,3,3,4,4,4)
# O = no tag; 1 = tag; 5 = tag + 4;
Condition <- c(1,0,5,1,0,5,1,0,5,1,0,5)
Indv <- as.factor(Ind)
Cond <- as.factor(Condition)
linear.model <- lm(trialmean ~ Indv + Cond)
aov <- anova(linear.model)
linear.model <- lm(trialmn ~ Indv + Cond)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
plot(trialmn ~ Indv*Cond)
(mean(trialmean[Cond==5])-mean(trialmean[Cond==0]))/mean(trialmean[Cond==0])
(mean(trialmean[Cond==5])-mean(trialmean[Cond==1]))/mean(trialmean[Cond==1])
(mean(trialmn[Cond==5])-mean(trialmn[Cond==0]))/mean(trialmn[Cond==0])
(mean(trialmn[Cond==5])-mean(trialmn[Cond==1]))/mean(trialmn[Cond==1])
aov
install.packages("ape")
(353.82 - 305.23)/305.23
library(caper)
setwd("/Users/julievanderhoop/Documents/R/BreathCounts")
data <- read.csv("MortolaData.csv")
tree <- read.nexus("nature05634-s2-revised_Lesley.nex")
tree <- tree[[1]] #Take only the tree with best dates
#Plot the tree
par(mfrow = c(1,1), mar = c(0,0,0,0) + 0.5)
plot(tree, show.tip.label = F)
#Plot the data
par(mfrow = c(1,1), mar = c(4,4,0,0) + 0.5)
plot(log(f) ~ log(M), data = data)
breathf.cdat <- comparative.data(phy = tree,
data = data,
names.col = "Latin_Name")
size(data)
breathf.cdat$dropped
setwd("/Users/julievanderhoop/Documents/R/BreathCounts")
data <- read.csv("MortolaData.csv")
tree <- read.nexus("nature05634-s2-revised_Lesley.nex")
tree <- tree[[1]] #Take only the tree with best dates
#Plot the tree
par(mfrow = c(1,1), mar = c(0,0,0,0) + 0.5)
plot(tree, show.tip.label = F)
#Plot the data
par(mfrow = c(1,1), mar = c(4,4,0,0) + 0.5)
plot(log(f) ~ log(M), data = data)
#Run the PGLS
breathf.cdat <- comparative.data(phy = tree,
data = data,
names.col = "Latin_Name")
breathf.cdat$dropped$unmatched.rows
head(tree$tip.label)
View(tree$tip.label)
print(tree$tip.label)
print(tree$tip.label[1000:2000])
breathf.cdat$dropped$unmatched.rows
data <- read.csv("MortolaData.csv")
tree <- read.nexus("nature05634-s2-revised_Lesley.nex")
tree <- tree[[1]] #Take only the tree with best dates
#Plot the tree
par(mfrow = c(1,1), mar = c(0,0,0,0) + 0.5)
plot(tree, show.tip.label = F)
#Plot the data
par(mfrow = c(1,1), mar = c(4,4,0,0) + 0.5)
plot(log(f) ~ log(M), data = data)
#Run the PGLS
breathf.cdat <- comparative.data(phy = tree,
data = data,
names.col = "Latin_Name")
breathf.cdat$dropped$unmatched.rows
print(tree$tip.label[3400:4400])
print(tree$tip.label[300:3400])
print(tree$tip.label[3000:3400])
print(tree$tip.label[2500:3000])
print(tree$tip.label[3001:3005])
grep("groen", tree$tip.label)]
grep("groen", tree$tip.label)
tree&tip.labels[1077]
tree&tip.label[1077]
tree$tip.label[1077]
tree$tip.label[3204]
source('~/Documents/R/BreathCounts/PGLS BreathF.R', echo=TRUE)
setwd("/Users/julievanderhoop/Documents/R/BreathCounts")
data <- read.csv("MortolaData.csv")
par(mfrow = c(1,1), mar = c(4,4,0,0) + 0.5)
plot(log(f) ~ log(M), data = data)
breathf.cdat <- comparative.data(phy = tree,
data = data,
names.col = "Latin_Name")
setwd("/Users/julievanderhoop/Documents/R/BreathCounts")
data <- read.csv("MortolaData.csv")
breathf.cdat <- comparative.data(phy = tree,
data = data,
names.col = "Latin_Name")
breathf.cdat$dropped$unmatched.rows
grep("anser", tree$tip.label)
grep("Anser", tree$tip.label)
grep("domesticus", tree$tip.label)
grep("groen", tree$tip.label)
grep("erythr", tree$tip.label)
grep("catus", tree$tip.label)
tree$tip.label[ grep("catus", tree$tip.label)]
breathf.cdat$dropped$unmatched.rows
tree$tip.label[grep("Pelecanus", tree$tip.label)]
tree$tip.label[grep("Pelicanus", tree$tip.label)]
setwd("/Users/julievanderhoop/Documents/R/BreathCounts")
data <- read.csv("MortolaData.csv")
par(mfrow = c(1,1), mar = c(4,4,0,0) + 0.5)
plot(log(f) ~ log(M), data = data)
data <- read.csv("MortolaData.csv")
par(mfrow = c(1,1), mar = c(4,4,0,0) + 0.5)
plot(log(f) ~ log(M), data = data)
